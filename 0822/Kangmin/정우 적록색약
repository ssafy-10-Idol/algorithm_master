import java.util.Scanner;

public class Main {
    static int n;
    static String str;
    static char[][] arr;
    static boolean[][] visit;
    static int[] dr ={-1, 1, 0, 0};
    static int[] dc = {0, 0, -1, 1};

    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        arr = new char[n+1][n+1];
        visit = new boolean[n+1][n+1];

        for(int i=0; i<n; i++){
            str = sc.next();
            for(int j=0; j<n; j++){
                arr[i][j] = str.charAt(j);
            }
        }
        int count = 0;
        for(int i=0; i<n; i++){
            for(int j=0; j<n; j++){
                if(!visit[i][j]){
                    dfs(i, j);
                    count++;
                }
            }
        }
        int normal_count = count;
        count = 0;
        visit = new boolean[n+1][n+1];

        for(int i=0; i<n; i++){
            for(int j=0; j<n; j++){
                if(arr[i][j] == 'G'){
                    arr[i][j] = 'R';
                }
            }
        }
        for(int i=0; i<n; i++){
            for(int j=0; j<n; j++){
                if(!visit[i][j]){
                    dfs(i, j);
                    count++;
                }
            }
        }
        int abnormal_count = count;
        System.out.println(normal_count + " " + abnormal_count);
    }
    public static void dfs(int x, int y){
        visit[x][y] = true;
        char tmp_char = arr[x][y];
        for(int i=0; i<4; i++){
            int dx = x + dr[i];
            int dy = y + dc[i];

            if(dx<0 || dy < 0 || dx>n || dy>n){
                continue;
            }
            if(!visit[dx][dy] && arr[dx][dy] == tmp_char){
                dfs(dx, dy);
            }
        }
    }
}
